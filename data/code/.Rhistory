theme_minimal(base_family = "Roboto Condensed", base_size = 14) +
theme(plot.title.position = "plot",
plot.title = element_text(margin = margin(b = 1, "lines")))
# Frühester Tag mit 30+ Grad
findat |> slice_min(time, by = year, with_ties = F) |>
ggplot(aes(x = year, y = lubridate::`year<-`(time, 2000))) +
geom_point() + scale_y_date(labels = date_format("%e. %b", locale = "de")) +
geom_smooth(method=lm, se = F, color = "darkred") +
labs(x = NULL, y = NULL,
title = "Datum des ersten Hitzetages (≥30°C)",
caption = "Daten: ZAMG") +
theme_minimal(base_family = "Roboto Condensed", base_size = 14) +
theme(plot.title.position = "plot",
plot.title = element_text(margin = margin(b = 1, unit = "lines")))
ggsave("~/Desktop/30er.png", width = 8, height = 5, dpi = 320)
# Frühester Tag mit 30+ Grad
findat |> slice_min(time, by = year, with_ties = F) |>
ggplot(aes(x = year, y = lubridate::`year<-`(time, 2000))) +
geom_point() + scale_y_date(labels = date_format("%e. %b", locale = "de")) +
geom_smooth(method=lm, se = F, color = "darkred") +
labs(x = NULL, y = NULL,
title = "Datum des ersten Hitzetages (≥30°C) in Österreich",
caption = "Anm.: Messdaten der 9 Landeshauptstädte. Daten: ZAMG") +
theme_minimal(base_family = "Roboto Condensed", base_size = 14) +
theme(plot.title.position = "plot",
plot.title = element_text(margin = margin(b = 1, unit = "lines")))
ggsave("~/Desktop/30er.png", width = 8, height = 5, dpi = 320)
setwd("~/Daten/Lehre/wipol_viz_MA/data/assignments")
library(tidyverse)
raw <- read_csv("lines.csv")
raw
findat <- raw |>
mutate(date = yq(quarter),
country = countrycode::countrycode(country, origin = "iso2c",
destination = "country.name.en"))
findat
findat |> ggplot(aes(x = date, y = top5share, color = country)) +
geom_line()
findat |>
ggplot(aes(x = date, y = top5share)) +
geom_line(color = "grey80") +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, group = country)) +
geom_line(color = "grey80") +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, group = country)) +
geom_line(color = "grey80", data = findat |> filter(!country == "Austria")) +
geom_line(color = "red", data = findat |> filter(country == "Austria")) +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line() +
gghighlight::gghighlight(country == "Austria") +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria") +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "blue")) +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80")) +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text") +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text_path") +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text_path",
label_params = list(size = 3, family = "Barlow Condensed")) +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text_path",
label_params = list(size = 5, family = "Barlow Condensed",
vjust = 0)) +
theme_minimal()
findat |>
ggplot() +
geom_line(aes(x = date, y = top5share, group = country),
linewidth = 0.9, color = "firebrick") +
gghighlight(country == "Austria", line_label_type = "text_path",
label_params = list(size = 3, family = "Roboto Condensed",
hjust = 0.98, vjust = -0.2),
unhighlighted_params = list(linewidth = 0.4, color = "gray70")) +
geom_text(aes(x = date, y = top5share, label = country), color = "gray40",
size = 3, nudge_y = -1, nudge_x = -150, family = "Roboto Condensed",
data = findat |> slice_max(date, n = 1) |> slice_min(top5share, n = 1)) +
scale_y_continuous(labels = scales::number_format(suffix = "%")) +
scale_x_date(limits = c(as.Date("2011-01-01"), NA), expand = c(0,0)) +
labs(x = NULL, y = NULL,
title = "Wealth inequality in the Eura Area",
subtitle = "Net wealth share of the top 5%, Q1/2011-Q4/2023",
caption = "Source: Distributional Wealth Accounts, ECB. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.title.position = "plot",
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12, margin = margin(b = 1, unit = "lines")),
plot.caption = element_text(size = 8, margin = margin(t = 1, unit = "lines")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.1))
library(gghighlight)
findat |>
ggplot() +
geom_line(aes(x = date, y = top5share, group = country),
linewidth = 0.9, color = "firebrick") +
gghighlight(country == "Austria", line_label_type = "text_path",
label_params = list(size = 3, family = "Roboto Condensed",
hjust = 0.98, vjust = -0.2),
unhighlighted_params = list(linewidth = 0.4, color = "gray70")) +
geom_text(aes(x = date, y = top5share, label = country), color = "gray40",
size = 3, nudge_y = -1, nudge_x = -150, family = "Roboto Condensed",
data = findat |> slice_max(date, n = 1) |> slice_min(top5share, n = 1)) +
scale_y_continuous(labels = scales::number_format(suffix = "%")) +
scale_x_date(limits = c(as.Date("2011-01-01"), NA), expand = c(0,0)) +
labs(x = NULL, y = NULL,
title = "Wealth inequality in the Eura Area",
subtitle = "Net wealth share of the top 5%, Q1/2011-Q4/2023",
caption = "Source: Distributional Wealth Accounts, ECB. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.title.position = "plot",
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12, margin = margin(b = 1, unit = "lines")),
plot.caption = element_text(size = 8, margin = margin(t = 1, unit = "lines")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.1))
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9, color = "red") +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text_path",
label_params = list(size = 5, family = "Barlow Condensed",
vjust = 0)) +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text_path",
label_params = list(size = 5, family = "Barlow Condensed",
vjust = 0)) +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text_path",
label_params = list(size = 5, family = "Barlow Condensed",
vjust = -0.2)) +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text_path",
label_params = list(size = 4, family = "Barlow Condensed",
vjust = -0.2)) +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text_path",
label_params = list(size = 4, family = "Barlow Condensed",
vjust = -0.2, hjust = 0.9)) +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text_path",
label_params = list(size = 4, family = "Barlow Condensed",
vjust = -0.2, hjust = 0.95)) +
theme_minimal()
findat |>
ggplot(aes(x = date, y = top5share, color = country)) +
geom_line(linewidth = 0.9) +
gghighlight::gghighlight(country == "Austria",
unhighlighted_params = list(linewidth = 0.5, color = "grey80"),
line_label_type = "text_path",
label_params = list(size = 4, family = "Barlow Condensed",
vjust = -0.2, hjust = 0.98)) +
theme_minimal()
findat |>
ggplot() +
geom_line(aes(x = date, y = top5share, group = country),
linewidth = 0.9, color = "firebrick") +
gghighlight(country == "Austria", line_label_type = "text_path",
label_params = list(size = 3, family = "Roboto Condensed",
hjust = 0.98, vjust = -0.2),
unhighlighted_params = list(linewidth = 0.4, color = "gray70")) +
geom_text(aes(x = date, y = top5share, label = country), color = "gray40",
size = 3, nudge_y = -1, nudge_x = -150, family = "Roboto Condensed",
data = findat |> slice_max(date, n = 1) |> slice_min(top5share, n = 1)) +
scale_y_continuous(labels = scales::number_format(suffix = "%")) +
scale_x_date(limits = c(as.Date("2011-01-01"), NA), expand = c(0,0)) +
labs(x = NULL, y = NULL,
title = "Wealth inequality in the Eura Area",
subtitle = "Net wealth share of the top 5%, Q1/2011-Q4/2023",
caption = "Source: Distributional Wealth Accounts, ECB. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.title.position = "plot",
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12, margin = margin(b = 1, unit = "lines")),
plot.caption = element_text(size = 8, margin = margin(t = 1, unit = "lines")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.1))
librarian::shelf(tidyverse, readxl, countrycode, ggtext, MetBrewer)
# Load original data from ECB: https://www.ecb.europa.eu/home/pdf/research/hfcn/HFCS_Statistical_tables_Wave_2017_May2021.zip?078368a4438f4d94712367f6615445aa
hfcs <- readxl::read_xlsx("HFCS_Statistical_tables_Wave 2017_May2021.xlsx",
sheet = "J3 Net wealth per household ", range = "A4:Z24") |>
janitor::clean_names() |>
rename(measure = x1) |> select(-x2, -x3) |>
filter(measure %in% c("Mean", "p20", "p50", "p80")) |>
mutate(across(-measure, as.numeric))
setwd("~/Daten/Lehre/wipol_viz_MA/data/code")
# Load original data from ECB: https://www.ecb.europa.eu/home/pdf/research/hfcn/HFCS_Statistical_tables_Wave_2017_May2021.zip?078368a4438f4d94712367f6615445aa
hfcs <- readxl::read_xlsx("HFCS_Statistical_tables_Wave 2017_May2021.xlsx",
sheet = "J3 Net wealth per household ", range = "A4:Z24") |>
janitor::clean_names() |>
rename(measure = x1) |> select(-x2, -x3) |>
filter(measure %in% c("Mean", "p20", "p50", "p80")) |>
mutate(across(-measure, as.numeric))
# Data into long format with "pivot_longer", capitalize country codes with "toupper" and merge country names from countrycode package with "left_join"
findat <- hfcs |>
pivot_longer(-measure, names_to = "country", values_to = "value") |>
mutate(across(c(country, measure), toupper)) |>
left_join(countrycode::codelist |> select(iso2c, country.name.en),
by = c("country" = "iso2c")) |>
mutate(country.name.en = ifelse(country == "EURO_AREA", "Euro Area", country.name.en),
country.name.en = fct_reorder(country.name.en, value))
hfcs
findat |>
ggplot(aes(x = value, y = country.name.en, color = measure)) +
geom_line(color = "gray80", alpha = 0.15, linewidth = 2) +
geom_point(size = 2) +
scale_color_manual(values = met.brewer("Isfahan2"),
guide = guide_legend(override.aes = list(size = 4))) +
scale_x_continuous(limits = c(NA, 1200),
breaks = seq(0, 1200, 400),
labels = scales::number_format(prefix = "€", suffix = "K", big.mark = "")) +
labs(x = NULL, y = NULL, color = NULL,
title = "Who are the <span style='color:gold;'>**richest**</span> Europeans?",
subtitle = "Percentiles of net wealth distributions in thousand Euros",
caption = "Data: HFCS 2017, ECB. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.title.position = "plot",
plot.title = element_markdown(size = 20),
plot.subtitle = element_text(margin = margin(b = 1, unit = "lines")),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linewidth = 0.2, color = "gray80"),
legend.position = c(0.72, 0.3))
hfcs
1281+1730
library(tidyverse)
raw <- read.csv("~/Downloads/lines.csv")
glimpse(raw)
final <- raw |>
mutate(quarteryear = yq(quarter))
glimpse(final)
final |>
ggplot(aes(x = quarteryear, y = top5share))
final |>
ggplot(aes(x = quarteryear, y = top5share)) +
geom_line()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line() +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country, color = country)) +
geom_line() +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, color = country)) +
geom_line() +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line() +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line(data = final |> filter(country == "AT"), color = "red") +
geom_line() +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line() +
geom_line(data = final |> filter(country == "AT"), color = "red") +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line(data = final |> filter(country == "AT"), color = "red") +
geom_line(data = final |> filter(!country == "AT"), color = "blue")  +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line() +
theme_minimal()
library(gghighlight)
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line() +
gghighlight(country == "AT") +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line() +
gghighlight(country == "AT",
unhighlighted_params = list(color = "blue",
linewidth = .3)) +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line() +
gghighlight(country == "AT",
unhighlighted_params = list(color = "blue",
linewidth = .1)) +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line() +
gghighlight(country == "AT",
unhighlighted_params = list(color = "gray80",
linewidth = .1)) +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line() +
gghighlight(country == "AT", color = "yellow",
unhighlighted_params = list(color = "gray80",
linewidth = .1)) +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line(color = "firebrick") +
gghighlight(country == "AT",
unhighlighted_params = list(color = "gray80",
linewidth = .1)) +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line(color = "firebrick") +
gghighlight(country == "AT", line_label_type = "text_path",
unhighlighted_params = list(color = "gray80",
linewidth = .1)) +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line(color = "firebrick") +
gghighlight(country == "AT", line_label_type = "text_path",
vjust = 0,
unhighlighted_params = list(color = "gray80",
linewidth = .1)) +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line(color = "firebrick") +
gghighlight(country == "AT", line_label_type = "text_path",
label_params = list(vjust = 0),
unhighlighted_params = list(color = "gray80",
linewidth = .1)) +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = country)) +
geom_line(color = "firebrick") +
gghighlight(country == "AT", line_label_type = "text_path",
label_params = list(vjust = -0.2),
unhighlighted_params = list(color = "gray80",
linewidth = .1)) +
theme_minimal()
library(countrcode)
library(countrycode)
codelist
View(codelist)
glimpse(final)
final <- raw |>
mutate(quarteryear = yq(quarter)) |>
mutate(countryname = countrycode(country, origin = "iso2c",
destination = "country.name.en"))
View(final)
final |>
ggplot(aes(x = quarteryear, y = top5share, group = countryname)) +
geom_line(color = "firebrick") +
gghighlight(country == "AT", line_label_type = "text_path",
label_params = list(vjust = -0.2),
unhighlighted_params = list(color = "gray80",
linewidth = .1)) +
theme_minimal()
final |>
ggplot(aes(x = quarteryear, y = top5share, group = countryname)) +
geom_line(color = "firebrick") +
gghighlight(country == "AT", line_label_type = "text_path",
label_params = list(vjust = -0.2, hjust = 0.9),
unhighlighted_params = list(color = "gray80",
linewidth = .1)) +
theme_minimal()
load("~/Downloads/05_wealth.RData")
View(hfcs)
library(tidyverse)
longdf <- hfcs |>
pivot_longer(-measure, names_to = "country", values_to = "values")
View(longdf)
longdf |>
ggplot(aes(x = values, y = country)) +
geom_point() +
theme_minimal()
longdf |>
ggplot(aes(x = values, y = country, color = measure)) +
geom_point() +
theme_minimal()
longdf |>
ggplot(aes(x = values, y = country, color = measure)) +
geom_point() +
scale_color_manual() +
theme_minimal()
longdf |>
ggplot(aes(x = values, y = country, color = measure)) +
geom_point() +
scale_color_manual(values = c("red","yellow","blue","green")) +
theme_minimal()
library(wesanderson)
longdf |>
ggplot(aes(x = values, y = country, color = measure)) +
geom_point() +
scale_color_manual(values = wes_palette("Royal1")) +
theme_minimal()
longdf |>
ggplot(aes(x = values, y = country, color = measure)) +
geom_point() +
scale_color_manual(values = wes_palette("Royal1")) +
scale_x_continuous(name = "Euros in thousands") +
theme_minimal()
longdf |>
ggplot(aes(x = values, y = country, color = measure)) +
geom_point() +
scale_color_manual(values = wes_palette("Royal1")) +
scale_x_continuous(name = "Net wealth") +
theme_minimal()
longdf |>
ggplot(aes(x = values, y = country, color = measure)) +
geom_point() +
scale_color_manual(values = wes_palette("Royal1")) +
scale_x_continuous(name = "Net wealth",
breaks = seq(0, 1200, 200)) +
theme_minimal()
library(scales)
longdf |>
ggplot(aes(x = values, y = country, color = measure)) +
geom_point() +
scale_color_manual(values = wes_palette("Royal1")) +
scale_x_continuous(name = "Net wealth",
breaks = seq(0, 1200, 200),
labels = scales::label_number(prefix = "€",
suffix = "K")) +
theme_minimal()
longdf |>
ggplot(aes(x = values, y = country, color = measure)) +
geom_point() +
scale_color_manual(values = wes_palette("Royal1")) +
scale_x_continuous(name = "Net wealth",
breaks = seq(0, 1200, 400),
labels = scales::label_number(prefix = "€",
suffix = "K")) +
theme_minimal()
longdf |>
ggplot(aes(x = values, y = country, color = measure)) +
geom_point() +
scale_color_manual(values = wes_palette("Royal1")) +
scale_x_continuous(name = "Net wealth",
breaks = seq(0, 1200, 300),
labels = scales::label_number(prefix = "€",
suffix = "K")) +
theme_minimal()
